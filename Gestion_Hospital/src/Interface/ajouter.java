/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import jdbc2014.*;
import jdbc2014.Connexion;
import Mise_a_jour.*;
import javax.swing.JTable;

/**
 *
 * @author Lisa
 */
public class ajouter extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form ajouter
     */
    
    private  String LoginECE;
    private  String PasswordECE;
    private  String LoginBDD;
    private  String PasswordBDD;
    
    public ajouter(String nomECE, String mdpECE, String nomBDD, String mdpBDD) throws SQLException {
        initComponents();
        this.LoginECE = nomECE;
        this.PasswordECE = mdpECE;
        this.LoginBDD= nomBDD;
        this.PasswordBDD = mdpBDD;
        this.table.addActionListener(this);
        this.ajout.addActionListener(this);
        this.a1.setVisible(false);
        this.a2.setVisible(false);
        this.a3.setVisible(false);
        this.a4.setVisible(false);
        this.a5.setVisible(false);
        this.a6.setVisible(false);
        this.p1.setVisible(false);
        this.p2.setVisible(false);
        this.p3.setVisible(false);
        this.p4.setVisible(false);
        this.p5.setVisible(false);
        this.p6.setVisible(false);

        try {
            connect = new Connexion(nomECE, mdpECE, nomBDD, mdpBDD);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ajouter.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        table = new javax.swing.JComboBox();
        a1 = new javax.swing.JLabel();
        a2 = new javax.swing.JLabel();
        a3 = new javax.swing.JLabel();
        a4 = new javax.swing.JLabel();
        a5 = new javax.swing.JLabel();
        a6 = new javax.swing.JLabel();
        ajout = new javax.swing.JButton();
        p1 = new javax.swing.JTextField();
        p2 = new javax.swing.JTextField();
        p5 = new javax.swing.JTextField();
        p4 = new javax.swing.JTextField();
        p3 = new javax.swing.JTextField();
        p6 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        BoutonRetourMaj = new javax.swing.JButton();
        BoutonRetourPrinc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mise Ã  jour de la base - ajout");
        jLabel1.setAutoscrolls(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(168, 42));

        table.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "chambre", "docteur", "employe", "generique", "infirmier", "malade", "service" }));
        table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableActionPerformed(evt);
            }
        });

        a1.setText("Champ1");

        a2.setText("Champ 2");

        a3.setText("Champ 3");

        a4.setText("Champ 4");

        a5.setText("Champ 5");

        a6.setText("Champ 6");

        ajout.setText("ajouter");

        p1.setText("jTextField2");

        p2.setText("jTextField2");

        p5.setText("jTextField2");
        p5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p5ActionPerformed(evt);
            }
        });

        p4.setText("jTextField2");

        p3.setText("jTextField2");

        p6.setText("jTextField2");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        BoutonRetourMaj.setText("Menu Maj");
        BoutonRetourMaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonRetourMajActionPerformed(evt);
            }
        });

        BoutonRetourPrinc.setText("Menu Principal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(443, 443, 443)
                .addComponent(a4)
                .addGap(133, 133, 133)
                .addComponent(a5)
                .addGap(134, 134, 134)
                .addComponent(a6)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(450, Short.MAX_VALUE)
                .addComponent(a1)
                .addGap(135, 135, 135)
                .addComponent(a2)
                .addGap(130, 130, 130)
                .addComponent(a3)
                .addGap(532, 532, 532))
            .addGroup(layout.createSequentialGroup()
                .addGap(384, 384, 384)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BoutonRetourMaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BoutonRetourPrinc))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(p4, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(p1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(p5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(p6, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ajout, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(a3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(a2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(a1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a4)
                    .addComponent(a5)
                    .addComponent(a6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(ajout)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BoutonRetourMaj)
                    .addComponent(BoutonRetourPrinc))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableActionPerformed

    private void p5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p5ActionPerformed

    private void BoutonRetourMajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonRetourMajActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Mise_a_jour mise_a_jour =  new Mise_a_jour(LoginECE,PasswordECE,LoginBDD,PasswordBDD);
        mise_a_jour.setVisible(true);
    }//GEN-LAST:event_BoutonRetourMajActionPerformed

    private Connexion connect;
    
    
 
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonRetourMaj;
    private javax.swing.JButton BoutonRetourPrinc;
    private javax.swing.JLabel a1;
    private javax.swing.JLabel a2;
    private javax.swing.JLabel a3;
    private javax.swing.JLabel a4;
    private javax.swing.JLabel a5;
    private javax.swing.JLabel a6;
    private javax.swing.JButton ajout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField p1;
    private javax.swing.JTextField p2;
    private javax.swing.JTextField p3;
    private javax.swing.JTextField p4;
    private javax.swing.JTextField p5;
    private javax.swing.JTextField p6;
    private javax.swing.JComboBox table;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        String requete = "INSERT INTO ", mot = null, mots;
        ArrayList<String> champs = null, resultat = null;
        String[] tab;
        char a[];
        ajout ajouter = new ajout();

        try {
            champs = connect.remplirChampsTable((String) table.getSelectedItem());
        } catch (SQLException ex) {
            Logger.getLogger(ajouter.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < champs.size(); i++) {
            if (i == 0) {
                a1.setText(champs.get(i));
                this.a1.setVisible(true);
                this.p1.setVisible(true);
            } else if (i == 1) {
                a2.setText(champs.get(i));
                this.a2.setVisible(true);
                this.p2.setVisible(true);
            } else if (i == 2) {
                a3.setText(champs.get(i));
                this.a3.setVisible(true);
                this.p3.setVisible(true);
            } else if (i == 3) {
                a4.setText(champs.get(i));
                this.a4.setVisible(true);
                this.p4.setVisible(true);
            } else if (i == 4) {
                a5.setText(champs.get(i));
                this.a5.setVisible(true);
                this.p5.setVisible(true);
            } else if (i == 5) {
                a6.setText(champs.get(i));
                this.a6.setVisible(true);
                this.p6.setVisible(true);
            }
        }

        requete = requete + " " + (String) table.getSelectedItem() + " " + "(";

        for (int i = 0; i < champs.size(); i++) {
            requete = requete + champs.get(i);
            if (i != (champs.size() - 1)) {
                requete = requete + ",";
            }
        }

        requete = requete + ") VALUES (";

        for (int i = 0; i < champs.size(); i++) {
            if (i == 0) {
                mot = p1.getText();
            } else if (i == 1) {
                mot = p2.getText();
            } else if (i == 2) {
                mot = p3.getText();
            } else if (i == 3) {
                mot = p4.getText();
            } else if (i == 4) {
                mot = p5.getText();
            } else if (i == 5) {
                mot = p6.getText();
            }

            if (mot.charAt(0) < 48 || 57 < mot.charAt(0)) {
                requete = requete + "'" + mot + "'";
            } else {
                requete = requete + mot;
            }

            if (i != (champs.size() - 1)) {
                requete = requete + ",";
            }
        }

        requete = requete + ");";
        if (e.getSource() == ajout) {
            System.out.println("a");
            try {
                ajouter.ajout((String) table.getSelectedItem(), requete, connect);
            } catch (SQLException ex) {
                Logger.getLogger(ajouter.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                resultat = connect.remplirChampsRequete("SELECT * FROM " + (String) table.getSelectedItem());
            } catch (SQLException ex) {
                Logger.getLogger(ajouter.class.getName()).log(Level.SEVERE, null, ex);
            }
            mots="VÃ©rification:\n";

            
            mots=mots+champs.toString()+"\n";
            
           
            mots=mots+resultat.toString()+"\n";
            
            
            a=mots.toCharArray();
            
            for(int i=0; i<a.length; i++)
            {
                if(a[i]==',' || a[i]=='[' || a[i]==']' || a[i]==';')
                {
                     mot=mots+a[i];
                     mot=mot.substring(0, mot.length()-1);
                     mot=mot+" ";
                }else mot=mots+a[i];
            }
            
            
            
            jTextArea1.setText(mot);

        }
    }
}


